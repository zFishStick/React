{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\Zona mij\\\\Apprendimento\\\\React\\\\first-project\\\\src\\\\Components\\\\ColorProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Crea il context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorContext = /*#__PURE__*/createContext();\n\n// Hook per usare il ColorContext\nexport const useColor = () => {\n  _s();\n  return useContext(ColorContext);\n};\n\n// Componente Provider per fornire lo stato del colore\n_s(useColor, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ColorProvider = ({\n  children\n}) => {\n  _s2();\n  const initialColor = localStorage.getItem('color') || '#ffffff'; // Recupera il colore salvato\n  const [color, setColor] = useState(initialColor);\n  useEffect(() => {\n    localStorage.setItem('color', color); // Salva il colore nel localStorage\n  }, [color]);\n  const changeColor = newColor => {\n    setColor(newColor);\n  };\n  return /*#__PURE__*/_jsxDEV(ColorContext.Provider, {\n    value: {\n      color,\n      changeColor\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s2(ColorProvider, \"IIyYCzOmB6v5EfZ47JSJ4ckfqJ8=\");\n_c = ColorProvider;\nvar _c;\n$RefreshReg$(_c, \"ColorProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","ColorContext","useColor","_s","ColorProvider","children","_s2","initialColor","localStorage","getItem","color","setColor","setItem","changeColor","newColor","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gabri/OneDrive/Desktop/Zona mij/Apprendimento/React/first-project/src/Components/ColorProvider.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\n// Crea il context\r\nconst ColorContext = createContext();\r\n\r\n// Hook per usare il ColorContext\r\nexport const useColor = () => useContext(ColorContext);\r\n\r\n// Componente Provider per fornire lo stato del colore\r\nexport const ColorProvider = ({ children }) => {\r\n    const initialColor = localStorage.getItem('color') || '#ffffff'; // Recupera il colore salvato\r\n    const [color, setColor] = useState(initialColor);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('color', color); // Salva il colore nel localStorage\r\n    }, [color]);\r\n\r\n    const changeColor = (newColor) => {\r\n        setColor(newColor);\r\n    };\r\n\r\n    return (\r\n        <ColorContext.Provider value={{ color, changeColor }}>\r\n            {children}\r\n        </ColorContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,YAAY,CAAC;AAAA;;AAEtD;AAAAE,EAAA,CAFaD,QAAQ;AAGrB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3C,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,CAAC;EACjE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACW,YAAY,CAAC;EAEhDT,SAAS,CAAC,MAAM;IACZU,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMG,WAAW,GAAIC,QAAQ,IAAK;IAC9BH,QAAQ,CAACG,QAAQ,CAAC;EACtB,CAAC;EAED,oBACId,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEN,KAAK;MAAEG;IAAY,CAAE;IAAAR,QAAA,EAChDA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAACd,GAAA,CAjBWF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}