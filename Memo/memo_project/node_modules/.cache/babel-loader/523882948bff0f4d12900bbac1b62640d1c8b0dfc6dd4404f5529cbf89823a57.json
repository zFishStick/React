{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\Zona mij\\\\Apprendimento\\\\React\\\\first-project\\\\src\\\\Components\\\\MyComponent.jsx\",\n  _s = $RefreshSig$();\n// src/MyComponent.jsx\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useColor } from './ColorContext';\nimport { darken } from 'polished';\nimport '../Css/MyComponent.css';\nimport '../Css/ColorPicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MainContainer() {\n  _s();\n  const containerRef = useRef(null);\n  const bgButtonRef = useRef(null);\n  const {\n    color\n  } = useColor(); // Ottieni il colore dal contesto\n\n  useEffect(() => {\n    if (containerRef.current && bgButtonRef.current) {\n      const darkenedColor = darken(0.1, color);\n      containerRef.current.style.backgroundColor = color;\n      bgButtonRef.current.style.backgroundColor = color;\n    }\n  }, [color]);\n\n  // useState -> Stato iniziale dell'array (vuoto)\n  const [notes, setNotes] = useState(() => {\n    const savedNotes = localStorage.getItem('notes');\n    //Vera -> parsing delle note | falsa -> array vuoto\n    return savedNotes ? JSON.parse(savedNotes) : [];\n  });\n\n  // Funzione per aggiungere una nuova nota\n  const addNewNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: 'Titolo',\n      content: 'Scrivi qui'\n    };\n    setNotes([...notes, newNote]);\n  };\n\n  // Funzione per aggiornare una nota\n  const updateNote = (id, newTitle, newContent) => {\n    const updatedNotes = notes.map(note => note.id === id ? {\n      ...note,\n      title: newTitle,\n      content: newContent\n    } : note);\n    setNotes(updatedNotes);\n  };\n  const deleteNote = id => {\n    //Crea l'array con le note diverse da quella che voglio cancellare\n    setNotes(notes.filter(note => note.id !== id));\n  };\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]); //useEffect esegue la funzione ogni volta che 'notes' cambia stato\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    id: \"container\",\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-it-area\",\n      id: \"post-it-area\",\n      children: [notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-it\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => deleteNote(note.id),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"post-it-title\",\n          value: note.title,\n          onInput: e => updateNote(note.id, e.target.value, note.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"post-it-content\",\n          defaultValue: note.content,\n          onInput: e => updateNote(note.id, note.title, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-post-it\",\n          ref: bgButtonRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-btn\",\n              onClick: addNewNote\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(MainContainer, \"7LoHa5HRVeRvqEK4DKSABumAxx4=\", false, function () {\n  return [useColor];\n});\n_c = MainContainer;\nvar _c;\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useColor","darken","jsxDEV","_jsxDEV","MainContainer","_s","containerRef","bgButtonRef","color","current","darkenedColor","style","backgroundColor","notes","setNotes","savedNotes","localStorage","getItem","JSON","parse","addNewNote","newNote","id","Date","now","title","content","updateNote","newTitle","newContent","updatedNotes","map","note","deleteNote","filter","setItem","stringify","className","ref","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onInput","e","target","defaultValue","_c","$RefreshReg$"],"sources":["C:/Users/gabri/OneDrive/Desktop/Zona mij/Apprendimento/React/first-project/src/Components/MyComponent.jsx"],"sourcesContent":["// src/MyComponent.jsx\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport {useColor} from './ColorContext';\r\nimport { darken } from 'polished';\r\nimport '../Css/MyComponent.css';\r\nimport '../Css/ColorPicker.css'\r\n\r\nexport function MainContainer() {\r\n\r\n  const containerRef = useRef(null);\r\n  const bgButtonRef = useRef(null);\r\n  const { color } = useColor(); // Ottieni il colore dal contesto\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current && bgButtonRef.current) {\r\n      const darkenedColor = darken(0.1, color);\r\n      containerRef.current.style.backgroundColor = color;\r\n      bgButtonRef.current.style.backgroundColor = color;\r\n    }\r\n  }, [color]);\r\n\r\n\r\n\r\n  // useState -> Stato iniziale dell'array (vuoto)\r\n  const [notes, setNotes] = useState(() => {\r\n    const savedNotes = localStorage.getItem('notes');\r\n    //Vera -> parsing delle note | falsa -> array vuoto\r\n    return savedNotes ? JSON.parse(savedNotes) : [];\r\n  });\r\n\r\n  // Funzione per aggiungere una nuova nota\r\n  const addNewNote = () => {\r\n    const newNote = { id: Date.now(), title: 'Titolo', content: 'Scrivi qui' };\r\n    setNotes([...notes, newNote]);\r\n  };\r\n\r\n  // Funzione per aggiornare una nota\r\n  const updateNote = (id, newTitle, newContent) => {\r\n    const updatedNotes = notes.map(note =>\r\n      note.id === id ? { ...note, title: newTitle, content: newContent } : note\r\n    );\r\n    setNotes(updatedNotes);\r\n  };\r\n\r\n  const deleteNote = (id) => {\r\n    //Crea l'array con le note diverse da quella che voglio cancellare\r\n    setNotes(notes.filter(note => note.id !== id));\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('notes', JSON.stringify(notes));\r\n  }, [notes]); //useEffect esegue la funzione ogni volta che 'notes' cambia stato\r\n\r\n  return (\r\n    <div className='container' id='container' ref={containerRef}>\r\n      <div className='post-it-area' id='post-it-area'>\r\n        {notes.map((note) => (\r\n          <div key={note.id} className='post-it'>\r\n            <button className='delete-btn' onClick={() => deleteNote(note.id)}>x</button>\r\n            <input className='post-it-title' value={note.title} onInput={(e) => updateNote(note.id, e.target.value, note.content)}></input>\r\n            <textarea className='post-it-content' defaultValue={note.content} onInput={(e) => updateNote(note.id, note.title, e.target.value)}></textarea>\r\n          </div>\r\n        ))}\r\n        <div className='add-container'>\r\n          <div className='add-post-it' ref={bgButtonRef}>\r\n            <div className='div-btn'>\r\n              <button className='add-btn' onClick={addNewNote}></button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}